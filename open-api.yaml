openapi: 3.0.3
info:
  title: Reviews for movies
  description: |-
    This is a sample to create, as a user reviews for movies
  termsOfService: NaN
  contact:
    email: ynov@ynov.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:3000/
tags:
  - name: Register
    description: Sign up as a new user
  - name: Login
    description: Log in as a user
  - name : Me
    description: User interface
  - name : Reviews
    description: User reviews
paths:
  /register:
    post:
      tags:
        - Register
      summary: Register as a new user
      description: Register as a new user
      operationId: addUser
      requestBody:
        description: Register as a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login:
    post:
      tags:
        - Login
      summary: Register as a new user
      description: Register as a new user
      operationId: addUser
      requestBody:
        description: Register as a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /me/reviews:
    get:
      tags:
        - Me
      summary: Find all my reviews
      description: Returns all the reviews belonging to this user
      operationId: getAllReviews
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
                example:
                  - reviewId: 1
                    movieTitle: Sherlock Holmes
                    rating: 2
                    description: Description
                  - reviewId: 2
                    movieTitle: Jumanji
                    rating: 5
                    description: non
                  - reviewId: 3
                    movieTitle: Star Wars
                    rating: 0
                    description: obligatoire
        '400':
          description: unsuccessful operation an error occurred
    post:
       tags:
        - Me
  /me/reviews/{reviewId}: 
    get:
      tags:
        - Me
    delete:
      tags:
        - Me
    put:
      tags:
        - Me
  /reviews/{userId}:
    get:
  /reviews/{reviewId}/like:
    post:
  /reviews/{reviewId}/dislike:
    post:

components:
  schemas:
    User:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
          example: "Jason"
    UserRegister:
      allOf:
        - $ref: '#/components/schemas/User'
      required:
        - email
        - password
    Review:
      required:
        - reviewId
        - movieTitle
        - rating
      properties:
        reviewId:
          type: string
          example: Jason4
        movieTitle:
          type: string
          example: Star wars
        rating:
          type: integer
        description:
          type: string
          example: Une description incroyable ehh nan c jason

